//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.The_Road_To_Moscow;
using Articy.Unity;
using Articy.Unity.Interfaces;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.The_Road_To_Moscow.Features
{
    
    
    [Serializable()]
    public class AssetFFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private Ambience mAmbience = new Ambience();
        
        [SerializeField()]
        private Music mMusic = new Music();
        
        [SerializeField()]
        private SFX mSFX = new SFX();
        
        [SerializeField()]
        private Image mImage = new Image();
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        /// <summary>
        /// Звуки окружающего мира.
        /// </summary>
        public Ambience Ambience
        {
            get
            {
                return mAmbience;
            }
            set
            {
                var oldValue = mAmbience;
                mAmbience = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "AssetF.Ambience", oldValue, mAmbience);
            }
        }
        
        /// <summary>
        /// Музыка в игре.
        /// </summary>
        public Music Music
        {
            get
            {
                return mMusic;
            }
            set
            {
                var oldValue = mMusic;
                mMusic = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "AssetF.Music", oldValue, mMusic);
            }
        }
        
        /// <summary>
        /// Звуковой эффект.
        /// </summary>
        public SFX SFX
        {
            get
            {
                return mSFX;
            }
            set
            {
                var oldValue = mSFX;
                mSFX = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "AssetF.SFX", oldValue, mSFX);
            }
        }
        
        /// <summary>
        /// Изображение в игре.
        /// </summary>
        public Image Image
        {
            get
            {
                return mImage;
            }
            set
            {
                var oldValue = mImage;
                mImage = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "AssetF.Image", oldValue, mImage);
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.The_Road_To_Moscow.Features.AssetFFeature newClone = ((Articy.The_Road_To_Moscow.Features.AssetFFeature)(aClone));
            newClone.Ambience = Ambience;
            newClone.Music = Music;
            newClone.SFX = SFX;
            newClone.Image = Image;
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.The_Road_To_Moscow.Features.AssetFFeature clone = new Articy.The_Road_To_Moscow.Features.AssetFFeature();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "Ambience"))
            {
                Ambience = ((Ambience)(aValue));
                return;
            }
            if ((aProperty == "Music"))
            {
                Music = ((Music)(aValue));
                return;
            }
            if ((aProperty == "SFX"))
            {
                SFX = ((SFX)(aValue));
                return;
            }
            if ((aProperty == "Image"))
            {
                Image = ((Image)(aValue));
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "Ambience"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Ambience);
            }
            if ((aProperty == "Music"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Music);
            }
            if ((aProperty == "SFX"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(SFX);
            }
            if ((aProperty == "Image"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Image);
            }
            return null;
        }
        #endregion
    }
}
